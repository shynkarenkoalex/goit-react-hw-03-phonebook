{"version":3,"sources":["components/Layout/Layout.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/FilterContact/FilterContact.js","components/App.js","index.js"],"names":["Layout","children","className","ContactItem","nameItem","numberItem","onRemove","type","onClick","ContactList","contacts","onRemoveContact","map","id","name","number","key","INITIAL_STATE","ContactForm","state","handleChange","ev","target","value","setState","handleSubmit","preventDefault","trim","length","props","onAddContact","reset","onSubmit","this","onChange","Component","FilterContact","valueFilter","onChangeFilter","App","filter","handleAddContact","contactItem","isExist","find","item","alert","contact","uuid","prevState","handleChangeFilter","getVisibleContacts","toLowerCase","includes","handleRemoveContact","idConact","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c5fe516.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Layout.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport './ContactItem.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({nameItem, numberItem, onRemove}) => (    \r\n    <li className='Contact-item'>\r\n        <p className='Contact-text'>{nameItem}: {numberItem}</p>\r\n        <section className='Contact-actions'>\r\n            <button type='button' className='Contact-button' onClick={onRemove}>Удалить</button>\r\n        </section>\r\n    </li>\r\n)\r\n\r\nContactItem.propTypes = {\r\n    nameItem: PropTypes.string.isRequired,\r\n    numberItem: PropTypes.string.isRequired,\r\n    onRemove: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactItem;","import React from \"react\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport \"./ContactList.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className=\"ContactList\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactItem\r\n        key={id}\r\n        nameItem={name}\r\n        numberItem={number}\r\n        onRemove={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport \"./ContactForm.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\"\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = ev => {\r\n    ev.preventDefault();\r\n    if(this.state.name.trim().length > 0) {\r\n      this.props.onAddContact({ ...this.state })\r\n    }\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\r\n        <label className=\"ContactForm-label\">\r\n          Name\r\n          <input\r\n            className=\"ContactForm-input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className=\"ContactForm-label\">\r\n          Number\r\n          <input\r\n            className=\"ContactForm-input\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"ContactForm-button\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./FilterContact.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterContact = ({ valueFilter, onChangeFilter }) => (\r\n  <label className=\"Filter-label\">\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      className=\"Filter-input\"\r\n      value={valueFilter}\r\n      onChange={ev => onChangeFilter(ev.target.value)}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilterContact.propTypes = {\r\n  valueFilter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FilterContact;\r\n","import React, { Component } from \"react\";\nimport uuid from \"uuid\";\nimport Layout from \"./Layout\";\nimport ContactList from \"./ContactList\";\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./FilterContact\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  handleAddContact = contactItem => {\n    let isExist = this.state.contacts.find(\n      item => item.name === contactItem.name\n    );\n\n    if (this.state.contacts.length > 0 && isExist) {\n      alert(`contact with name ${contactItem.name} is allready exist`);\n    } else {\n      const contact = {\n        id: uuid(),\n        name: contactItem.name,\n        number: contactItem.number\n      };\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact]\n      }));\n    }\n  };\n\n  handleChangeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  handleRemoveContact = idConact => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== idConact)\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.handleAddContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter\n            valueFilter={filter}\n            onChangeFilter={this.handleChangeFilter}\n          />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.handleRemoveContact}\n          ></ContactList>\n        )}\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}